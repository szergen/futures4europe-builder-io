@import './variables.css';
@import url('https://fonts.googleapis.com/css2?family=Inter:ital,opsz,wght@0,14..32,100..900;1,14..32,100..900&display=swap');
@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  :root {
    --w-base-rem: 16;

    --w-z-index-notification: 1000;
    --w-z-index-modal: 900;
    --w-z-index-dropdown: 800;
    --w-z-index-popout: 700;
    --w-z-index-header: 600;
    --w-z-index-sticky: 300;
    --w-z-index-auto: auto;

    --w-line-height-normal: 1;
    --w-line-height-condensed: 1.15;
    --w-line-height-heading: 1.25;
    --w-line-height-body: 1.5;
    --w-line-height-500: 1.75;
    --w-line-height-600: 2.25;
    --w-line-height-700: 2.75;
    --w-line-height-800: 3.25;
    --w-line-height-900: 3.75;
    --w-line-height-1000: 4.25;

    --w-font-weight-book: 700;
    --w-font-weight-heading: 600;
    --w-font-weight-emphasis: 550;
    --w-font-weight-body: 450;

    --w-font-size-caption: calc(12 / var(--w-base-rem) * 1rem);
    --w-font-size-menu: calc(12 / var(--w-base-rem) * 1rem);
    --w-font-size-body: calc(14 / var(--w-base-rem) * 1rem);
    --w-font-size-sub-section-heading: calc(16 / var(--w-base-rem) * 1rem);
    --w-font-size-section-heading: calc(18 / var(--w-base-rem) * 1rem);
    --w-font-size-tag: calc(18 / var(--w-base-rem) * 1rem);
    --w-font-size-post: calc(21 / var(--w-base-rem) * 1rem);
    --w-font-size-display-heading: calc(24 / var(--w-base-rem) * 1rem);
    --w-font-size-display-large: calc(32 / var(--w-base-rem) * 1rem);
    --w-font-size-xl: calc(40 / var(--w-base-rem) * 1rem);
    --w-font-size-xxl: calc(48 / var(--w-base-rem) * 1rem);
    --w-font-size-xxxl: calc(64 / var(--w-base-rem) * 1rem);

    --p-font-letter-spacing-densest: -0.54px;
    --p-font-letter-spacing-denser: -0.36px;
    --p-font-letter-spacing-dense: -0.24px;
    --p-font-letter-spacing-tag: -0.14px;
    --p-font-letter-spacing-normal: 0px;

    --w-space-none: 0px;
    --w-space-nano: calc(0.25 / var(--w-base-rem) * 1rem);
    --w-space-micro: calc(0 / var(--w-base-rem) * 1rem);
    --w-space-base: calc(1 / var(--w-base-rem) * 1rem);
    --w-space-xxs: calc(1.8 / var(--w-base-rem) * 1rem);
    --w-space-xs: calc(4 / var(--w-base-rem) * 1rem);
    --w-space-s: calc(8 / var(--w-base-rem) * 1rem);
    --w-space-m: calc(16 / var(--w-base-rem) * 1rem);
    --w-space-l: calc(24 / var(--w-base-rem) * 1rem);
    --w-space-xl: calc(32 / var(--w-base-rem) * 1rem);
    --w-space-xxl: calc(40 / var(--w-base-rem) * 1rem);
    --w-space-xxxl: calc(48 / var(--w-base-rem) * 1rem);

    --p-border-radius-0: 0px;
    --p-border-radius-050: 2px;
    --p-border-radius-100: 4px;
    --p-border-radius-150: 6px;
    --p-border-radius-200: 8px;
    --p-border-radius-300: 12px;
    --p-border-radius-400: 16px;
    --p-border-radius-500: 20px;
    --p-border-radius-600: 24px;
    --p-border-radius-700: 28px;
    --p-border-radius-750: 30px;
    --p-border-radius-800: 32px;
    --p-border-radius-full: 9999px;
    --p-border-radius-tag: calc(8 / var(--w-base-rem) * 1rem);

    --p-border-width-0: 0px;
    --p-border-width-0165: 0.66px;
    --p-border-width-015: 0.5px;
    --p-border-width-025: 1px;
    --p-border-width-050: 2px;
    --p-border-width-075: 3px;
    --p-border-width-100: 4px;

    --p-breakpoints-xs: 0px;
    --p-breakpoints-sm: 490px;
    --p-breakpoints-md: 768px;
    --p-breakpoints-base: 850px;
    --p-breakpoints-lg: 1024px;
    --p-breakpoints-xl: 1280px;
    --p-breakpoints-2xl: 1440px;

    --p-motion-ease: cubic-bezier(0.25, 0.1, 0.25, 1);
    --p-motion-ease-in: cubic-bezier(0.42, 0, 1, 1);
    --p-motion-ease-out: cubic-bezier(0, 0, 0.58, 1);
    --p-motion-ease-in-out: cubic-bezier(0.42, 0, 0.58, 1);
    --p-motion-linear: cubic-bezier(0, 0, 1, 1);

    --p-motion-duration-0: 0ms;
    --p-motion-duration-50: 50ms;
    --p-motion-duration-100: 100ms;
    --p-motion-duration-150: 150ms;
    --p-motion-duration-200: 200ms;
    --p-motion-duration-300: 300ms;
    --p-motion-duration-400: 400ms;
    --p-motion-duration-500: 500ms;
    --p-motion-duration-600: 600ms;
    --p-motion-duration-700: 700ms;
    --p-motion-duration-800: 800ms;
    --p-motion-duration-900: 900ms;
    --p-motion-duration-1000: 1000ms;

    --p-shadow-0: none;
    --p-shadow-100: 0px 1px 0px 0px rgba(26, 26, 26, 0.07);
    --p-shadow-200: 0px 3px 1px -1px rgba(26, 26, 26, 0.07);
    --p-shadow-300: 0px 4px 6px -2px rgba(26, 26, 26, 0.2);
    --p-shadow-400: 0px 8px 16px -4px rgba(26, 26, 26, 0.22);
    --p-shadow-500: 0px 12px 20px -8px rgba(26, 26, 26, 0.24);
    --p-shadow-600: 0px 20px 20px -8px rgba(26, 26, 26, 0.28);

    --p-shadow-bevel-100: 1px 0px 0px 0px rgba(0, 0, 0, 0.13) inset,
      -1px 0px 0px 0px rgba(0, 0, 0, 0.13) inset,
      0px -1px 0px 0px rgba(0, 0, 0, 0.17) inset,
      0px 1px 0px 0px rgba(204, 204, 204, 0.5) inset;
    --p-shadow-inset-100: 0px 1px 2px 0px rgba(26, 26, 26, 0.15) inset,
      0px 1px 1px 0px rgba(26, 26, 26, 0.15) inset;

    --c-avatar-size-10: 10px;
    --c-avatar-size-30: 30px;
    --c-avatar-size-50: 50px;
    --c-avatar-size-100: 100px;
    --c-avatar-size-150: 150px;
    --c-avatar-size-180: 180px;
    --c-avatar-size-200: 200px;

    /* special */
    --color-text-brand-label: rgb(234, 233, 236);
    --color-text-brand-tag: rgb(0, 0, 0);
    --color-text-brand-light: rgb(116, 119, 127);
    --color-background-brand-tag: rgb(234, 233, 236);
    --color-border-brand-separator: rgb(195, 196, 194, 0.5);
    --primary-color: rgb(234, 233, 236);
    --primary-white: rgb(255, 255, 255);
    --primary-white-50: rgba(255, 255, 255, 0.500);
    --primary-white-20: rgba(255, 255, 255, 0.200);
    --primary-black: rgb(0, 0, 0);
    --primary-brand: rgb(119, 85, 204);
    --primary-green: rgb(47, 148, 97);
    --primary-blue: rgb(5, 0, 175);
    --primary-white: rgb(255, 255, 255);
    --primary-secondary: rgb(205, 100, 200);
    --primary-blue-80: rgba(21, 15, 213, 0.8);
    --action-site: rgb(205, 100, 200);
    --action-hover: rgb(205, 100, 220);

    

    /* Background color social links. */
    --color-background-orcid: rgb(167, 207, 55);
    --color-background-researchgate: rgb(34, 213, 175);
    --color-background-website: rgb(5, 0, 175);
    /* Background color used for user avatars. */
    --color-background-user: rgb(200, 175, 240);
    /* Background color used for notifications. */
    --color-background-notification: rgb(214, 31, 31);
    /* Background color used for trial accounts. */
    --color-background-trial: rgb(209, 250, 224);
    /* Background color used for subaccounts. */
    --color-background-subaccount: rgb(255, 251, 234);
    /* Stronger background color used for primary actions or highlights. */
    --color-background-primary-stronger: rgb(3, 11, 93);
    /* Stronger background color used for destructive actions or highlights. */
    --color-background-destructive-stronger: rgb(74, 11, 11);
    /* Weaker background color used for primary actions or highlights. */
    --color-background-primary-weaker: rgb(204, 228, 255);
    /* Weaker background color used for destructive actions or highlights. */
    --color-background-destructive-weaker: rgb(252, 207, 207);
    /* Background color used for warning alerts and toasts. */
    --color-background-warning: rgb(244, 124, 34);
    /* Weakest background color used for warning alerts and toasts. */
    --color-background-warning-weakest: rgb(254, 245, 238);
    /* Strong inverse background color used for containers. */
    --color-background-inverse-strong: rgb(57, 71, 98);
    /* Background color used to represent a new status. */
    --color-background-new: rgb(245, 240, 252);
    /* Strong background color used for containers. */
    --color-background-strong: rgb(225, 227, 234);
    /* Weakest background color for indicating a new status. */
    --color-background-new-weakest: rgb(250, 247, 253);
    /* Background color used for destructive actions or highlights. */
    --color-background-destructive: rgb(214, 31, 31);
    /* Weak background color used for containers. */
    --color-background-weak: rgb(249, 249, 250);
    /* Background color used for primary actions or highlights. */
    --color-background-primary: rgb(2, 99, 224);
    /* Weakest background color used for primary actions or highlights. */
    --color-background-primary-weakest: rgb(235, 244, 255);
    /* Background color used to represent an entity or person as "busy". */
    --color-background-busy: rgb(244, 124, 34);
    /* Background color used for success alerts and toasts. */
    --color-background-success: rgb(20, 176, 83);
    /* Weakest background color used for destructive actions or highlights. */
    --color-background-destructive-weakest: rgb(254, 236, 236);
    /* Background color used to represent an entity or person as "offline". */
    --color-background-offline: rgb(174, 178, 193);
    /* Background color used for alternative striped rows. */
    --color-background-row-striped: rgb(244, 244, 246);
    /* Strongest background color used for primary actions or highlights. */
    --color-background-primary-strongest: rgb(6, 3, 58);
    /* Weakest background color used for success alerts and toasts. */
    --color-background-success-weakest: rgb(237, 253, 243);
    /* Strongest background color used for destructive actions or highlights. */
    --color-background-destructive-strongest: rgb(49, 12, 12);
    /* Strongest background color used for error alerts and toasts. */
    --color-background-error-strong: rgb(117, 12, 12);
    /* Strong primary brand background, accessible with inverse text. */
    --color-background-brand-strong: rgb(3, 11, 93);
    /* Primary brand background, accessible with inverse text. */
    --color-background-brand: rgb(0, 20, 137);
    /* Background color used for error alerts and toasts. */
    --color-background-error: rgb(214, 31, 31);
    /* Weakest background color used for neutral or default variants. */
    --color-background-neutral-weakest: rgb(235, 244, 255);
    /* Background color used to represent an entity or person as "available". */
    --color-background-available: rgb(20, 176, 83);
    /* Weakest background color used for error alerts and toasts. */
    --color-background-error-weakest: rgb(254, 236, 236);
    /* Background color used to represent required form fields. */
    --color-background-required: rgb(235, 86, 86);
    /* Strongest error background color */
    --color-background-error-strongest: rgb(49, 12, 12);
    /* Weakest background color with no semantic meaning, used for decorative purposes only. Should generally be used with matching decorative border and/or text tokens. */
    --color-background-decorative-40-weakest: rgb(245, 240, 252);
    /* Stronger inverse background color for any container. Must be used on color-background-body-inverse. */
    --color-background-inverse-stronger: rgb(57, 71, 98);
    /* Weakest background color with no semantic meaning, used for decorative purposes only. Should generally be used with matching decorative border and/or text tokens. */
    --color-background-decorative-30-weakest: rgb(237, 253, 243);
    /* Background color used for the main page body. */
    --color-background-body: rgb(255, 255, 255);
    /* Strong background color used for primary actions or highlights. */
    --color-background-primary-strong: rgb(0, 20, 137);
    /* Weakest background color with no semantic meaning, used for decorative purposes only. Should generally be used with matching decorative border and/or text tokens. */
    --color-background-decorative-20-weakest: rgb(235, 244, 255);
    /* Strong background color used for destructive actions or highlights. */
    --color-background-destructive-strong: rgb(117, 12, 12);
    /* Weak background color used for destructive actions or highlights. */
    --color-background-destructive-weak: rgb(246, 177, 177);
    /* Weakest background color with no semantic meaning, used for decorative purposes only. Should generally be used with matching decorative border and/or text tokens. */
    --color-background-decorative-10-weakest: rgb(244, 244, 246);
    /* Default background color for any container. */
    --color-background: rgb(244, 244, 246);
    /* Weak background color used for primary actions or highlights. */
    --color-background-primary-weak: rgb(153, 205, 255);
    /* Brand accent background color representing Segment. */
    --color-background-brand-30: rgb(106, 221, 178);
    /* Stronger background color used for containers. */
    --color-background-stronger: rgb(136, 145, 170);
    /* Brand accent background color representing Sendgrid. */
    --color-background-brand-20: rgb(81, 169, 227);
    /* Highlight brand background, accessible with black text. */
    --color-background-brand-highlight: rgb(242, 47, 70);
    /* Weakest background color used for brand highlights. */
    --color-background-brand-highlight-weakest: rgba(242, 47, 70, 0.1);
    /* Strongest background color used for containers. */
    --color-background-strongest: rgb(75, 86, 113);
    /* Brand accent background color representing Twilio. */
    --color-background-brand-10: rgb(242, 190, 90);
    /* Inverse background color used for the main page body. */
    --color-background-body-inverse: rgb(18, 28, 45);
    /* Inverse background color used for containers. */
    --color-background-inverse: rgb(31, 48, 76);
    /* Background color used for overlays. */
    --color-background-overlay: rgba(6, 3, 58, 0.4);
    /* Background color used to represent an entity or person as "unavailable". */
    --color-background-unavailable: rgb(214, 31, 31);
    /* Strongest inverse background color used for containers. */
    --color-background-inverse-strongest: rgb(255, 255, 255);
    /* Stronger error background color */
    --color-background-error-stronger: rgb(74, 11, 11);
    /* Stronger primary brand background, accessible with inverse text. */
    --color-background-brand-stronger: rgb(6, 3, 58);
    /* Stronger error border color */
    --color-border-error-stronger: rgb(74, 11, 11);
    /* Weak warning border color */
    --color-border-warning-weak: rgb(255, 179, 122);
    /* Weaker border color with no semantic meaning, used for decorative purposes only. Should generally be used with matching decorative background and/or text tokens. */
    --color-border-decorative-40-weaker: rgb(231, 220, 250);
    /* Weaker error border color */
    --color-border-error-weaker: rgb(252, 207, 207);
    /* User avatar border color. */
    --color-border-user: rgb(231, 220, 250);
    /* Weaker neutral border color */
    --color-border-neutral-weaker: rgb(204, 228, 255);
    /* Warning border color */
    --color-border-warning: rgb(244, 124, 34);
    /* Weaker success border color */
    --color-border-success-weaker: rgb(209, 250, 224);
    /* Stronger primary border color */
    --color-border-primary-stronger: rgb(3, 11, 93);
    /* Stronger destructive hover border color */
    --color-border-destructive-stronger: rgb(74, 11, 11);
    /* Weakest warning border color */
    --color-border-warning-weakest: rgb(254, 245, 238);
    /* Weaker primary border color */
    --color-border-primary-weaker: rgb(204, 228, 255);
    /* Destructive focus border color */
    --color-border-destructive-weaker: rgb(252, 207, 207);
    /* Weaker border color for something designated as new */
    --color-border-new-weaker: rgb(231, 220, 250);
    /* Destructive border color */
    --color-border-destructive: rgb(214, 31, 31);
    /* Strong border on inverse backgrounds. Must be used on color-background-body-inverse. */
    --color-border-inverse-strong: rgb(225, 227, 234);
    /* Primary border color */
    --color-border-primary: rgb(2, 99, 224);
    /* Weakest primary border color */
    --color-border-primary-weakest: rgb(235, 244, 255);
    /* Success border color */
    --color-border-success: rgb(20, 176, 83);
    /* Destructive focus border color */
    --color-border-destructive-weakest: rgb(254, 236, 236);
    /* Strongest destructive hover border color */
    --color-border-destructive-strongest: rgb(49, 12, 12);
    /* Strongest primary border color */
    --color-border-primary-strongest: rgb(6, 3, 58);
    /* Weakest success border color */
    --color-border-success-weakest: rgb(237, 253, 243);
    /* Weaker warning border color */
    --color-border-warning-weaker: rgb(253, 220, 196);
    /* Strong border color */
    --color-border-strong: rgb(96, 107, 133);
    /* Weak border color */
    --color-border-weak: rgb(202, 205, 216);
    /* Neutral border color */
    --color-border-neutral: rgb(2, 99, 224);
    /* Error border color */
    --color-border-error: rgb(214, 31, 31);
    /* Weakest error border color */
    --color-border-error-weakest: rgb(254, 236, 236);
    /* Strongest error border color */
    --color-border-error-strongest: rgb(49, 12, 12);
    /* Strong error border color */
    --color-border-error-strong: rgb(117, 12, 12);
    /* Weak error border color */
    --color-border-error-weak: rgb(245, 138, 138);
    /* Weak neutral border color */
    --color-border-neutral-weak: rgb(102, 179, 255);
    /* Default border color */
    --color-border: rgb(136, 145, 170);
    /* Weakest border color */
    --color-border-weakest: rgb(255, 255, 255);
    /* Stronger border on inverse backgrounds. Must be used on color-background-body-inverse. */
    --color-border-inverse-stronger: rgb(244, 244, 246);
    /* Weaker border on inverse backgrounds. Must be used on color-background-body-inverse. */
    --color-border-inverse-weaker: rgb(57, 71, 98);
    /* Weak success border color */
    --color-border-success-weak: rgb(54, 213, 118);
    /* Strong primary border color */
    --color-border-primary-strong: rgb(0, 20, 137);
    /* Border on inverse backgrounds. Must be used on color-background-body-inverse. */
    --color-border-inverse: rgb(136, 145, 170);
    /* Destructive focus border color */
    --color-border-destructive-strong: rgb(117, 12, 12);
    /* Weak primary border color */
    --color-border-primary-weak: rgb(153, 205, 255);
    /* Weakest border on inverse backgrounds. Must be used on color-background-body-inverse. */
    --color-border-inverse-weakest: rgb(31, 48, 76);
    /* Destructive focus border color */
    --color-border-destructive-weak: rgb(246, 177, 177);
    /* Strongest border on inverse backgrounds. Must be used on color-background-body-inverse. */
    --color-border-inverse-strongest: rgb(255, 255, 255);
    /* Weak border color for something designated as new */
    --color-border-new-weak: rgb(166, 127, 227);
    /* Weaker border color */
    --color-border-weaker: rgb(225, 227, 234);
    /* Weaker border color with no semantic meaning, used for decorative purposes only. Should generally be used with matching decorative background and/or text tokens. */
    --color-border-decorative-10-weaker: rgb(225, 227, 234);
    /* Weaker border color with no semantic meaning, used for decorative purposes only. Should generally be used with matching decorative background and/or text tokens. */
    --color-border-decorative-20-weaker: rgb(204, 228, 255);
    /* Weaker border color with no semantic meaning, used for decorative purposes only. Should generally be used with matching decorative background and/or text tokens. */
    --color-border-decorative-30-weaker: rgb(209, 250, 224);

    /* Weak shade of destructive link text to be used in interactions */
    --color-text-link-destructive-weak: rgb(246, 177, 177);
    /* Stronger shade of link text to be used in interactions */
    --color-text-link-stronger: rgb(3, 11, 93);
    /* Text color for user avatar. */
    --color-text-user: rgb(18, 28, 45);
    /* Icon color for indicating a new status. */
    --color-text-icon-new: rgb(109, 46, 209);
    /* Text color for the subaccount badge */
    --color-text-subaccount: rgb(84, 51, 8);
    /* Stronger shade of destructive text. */
    --color-text-destructive-stronger: rgb(74, 11, 11);
    /* Icon color for indicating a offline status */
    --color-text-icon-offline: rgb(96, 107, 133);
    /* Destructive link text */
    --color-text-link-destructive: rgb(214, 31, 31);
    /* Stronger primary text. */
    --color-text-primary-stronger: rgb(3, 11, 93);
    /* Icon color for indicating success. */
    --color-text-icon-success: rgb(14, 124, 58);
    /* Color for warning text. */
    --color-text-warning: rgb(141, 49, 24);
    /* Strongest shade of destructive link text to be used in interactions */
    --color-text-link-destructive-strongest: rgb(49, 12, 12);
    /* Icon color for being neutral. */
    --color-text-icon-neutral: rgb(0, 20, 137);
    /* Icon color for notification elements. */
    --color-text-icon-notification: rgb(235, 86, 86);
    /* Color for text indicating a new status. */
    --color-text-new: rgb(109, 46, 209);
    /* Icon color for indicating an error. */
    --color-text-icon-error: rgb(255, 0, 0);
    /* Weak inverse text color for dark backgrounds. Must pass AA color contrast with color-background-body-inverse. */
    --color-text-inverse-weak: rgb(202, 205, 216);
    /* Icon color for indicating a available status */
    --color-text-icon-available: rgb(14, 124, 58);
    /* Stronger shade of destructive link text to be used in interactions */
    --color-text-link-destructive-stronger: rgb(74, 11, 11);
    /* Twilio brand icon color used for the Twilio logo on inverse backgrounds. */
    --color-text-icon-brand-inverse: rgb(255, 255, 255);
    /* Destructive text. */
    --color-text-destructive: rgb(214, 31, 31);
    /* Primary text. */
    --color-text-primary: rgb(2, 99, 224);
    /* Text color for success text. */
    --color-text-success: rgb(14, 124, 58);
    /* Inverse color for indicating a new status. */
    --color-text-inverse-new: rgb(200, 175, 240);
    /* Strongest shade of destructive text. */
    --color-text-destructive-strongest: rgb(49, 12, 12);
    /* Weak body text for visual hierarchy. */
    --color-text-weak: rgb(96, 107, 133);
    /* Strongest primary text. */
    --color-text-primary-strongest: rgb(6, 3, 58);
    /* Default icon color. */
    --color-text-icon: rgb(96, 107, 133);
    /* Link text */
    --color-text-link: rgb(2, 99, 224);
    /* Twilio brand red icon color used for the Twilio logo. */
    --color-text-icon-brand-highlight: rgb(242, 47, 70);
    /* Color for text indicating a neutral status. */
    --color-text-neutral: rgb(0, 20, 137);
    /* Text color to be used on top of brand accent background colors such as color-background-brand-10 only. */
    --color-text-brand: rgb(18, 28, 45);
    /* Strongest shade of link text to be used in interactions */
    --color-text-link-strongest: rgb(6, 3, 58);
    /* Error text for inputs and error misc */
    --color-text-error: rgb(214, 31, 31);
    /* Default icon color for inverse backgrounds. */
    --color-text-icon-inverse: rgb(136, 145, 170);
    /* Strong error text for inputs and error misc */
    --color-text-error-strong: rgb(173, 17, 17);
    /* Icon color for indicating a unavailable status */
    --color-text-icon-unavailable: rgb(214, 31, 31);
    /* Weak error text for inputs and error misc */
    --color-text-error-weak: rgb(235, 86, 86);
    /* Text color with no semantic meaning, used for decorative purposes only. Should generally be used with matching decorative background and/or border tokens. */
    --color-text-decorative-40: rgb(109, 46, 209);
    /* Strong shade of link text to be used in interactions */
    --color-text-link-strong: rgb(0, 20, 137);
    /* Text color used on any brand color */
    --color-text-brand-inverse: rgb(255, 255, 255);
    /* Strongest error text for inputs and error misc. */
    --color-text-error-strongest: rgb(49, 12, 12);
    /* Text color with no semantic meaning, used for decorative purposes only. Should generally be used with matching decorative background and/or border tokens. */
    --color-text-decorative-30: rgb(14, 124, 58);
    /* Weak shade of link text to be used in interactions */
    --color-text-link-weak: rgb(153, 205, 255);
    /* Text color with no semantic meaning, used for decorative purposes only. Should generally be used with matching decorative background and/or border tokens. */
    --color-text-decorative-20: rgb(0, 20, 137);
    /* Text color with no semantic meaning, used for decorative purposes only. Should generally be used with matching decorative background and/or border tokens. */
    --color-text-decorative-10: rgb(96, 107, 133);
    /* Body text color */
    --color-text: rgb(18, 28, 45);
    /* Icon color for indicating a busy status */
    --color-text-icon-busy: rgb(227, 106, 25);
    /* Weakest body text for visual hierarchy. Inaccessible unless used on disabled controls. */
    --color-text-weakest: rgb(255, 255, 255);
    /* Twilio brand red, accessible on large text only. */
    --color-text-brand-highlight: rgb(242, 47, 70);
    /* Strong shade of destructive text. */
    --color-text-destructive-strong: rgb(173, 17, 17);
    /* Weaker inverse text color for dark backgrounds. Must pass AA color contrast with color-background-body-inverse. */
    --color-text-inverse-weaker: rgb(136, 145, 170);
    /* Strong primary text. */
    --color-text-primary-strong: rgb(0, 20, 137);
    /* Weak primary text. */
    --color-text-primary-weak: rgb(153, 205, 255);
    /* Weak shade of destructive text. */
    --color-text-destructive-weak: rgb(246, 177, 177);
    /* Inverse text color for dark backgrounds. Must pass AA color contrast with color-background-body-inverse. */
    --color-text-inverse: rgb(255, 255, 255);
    /* Weakest inverse text color for dark backgrounds. Must pass AA color contrast with color-background-body-inverse. */
    --color-text-inverse-weakest: rgb(75, 86, 113);
    /* Weaker body text for visual hierarchy. Inaccessible unless used on disabled controls. */
    --color-text-weaker: rgb(174, 178, 193);
    /* Color for dark warning text. */
    --color-text-warning-strong: rgb(141, 49, 24);
    /* Icon color for indicating a warning. */
    --color-text-icon-warning: rgb(227, 106, 25);
    /* Stronger error text for inputs and error misc */
    --color-text-error-stronger: rgb(74, 11, 11);
    /* Strong shade of destructive link text to be used in interactions */
    --color-text-link-destructive-strong: rgb(173, 17, 17);
    
  }
}

@layer components {
  .btn {
    @apply mr-4;
  }

  .btn-edit {
    @apply text-black;
    @apply hover:bg-gray-200;
    @apply focus:outline-none;
    @apply focus:ring-2;
    @apply focus:ring-gray-300;
    @apply font-medium;
    border-radius: var(--p-border-radius-full);
    padding: var(--w-space-s) var(--w-space-m);
    font-size: var(--w-font-size-tag);
    line-height: var(--w-line-height-normal);
    letter-spacing: var(--p-font-letter-spacing-tag);
    height: var(--w-space-xxl);
    background: var(--primary-white);
    border: 1px solid var(--color-background-brand-tag);
    color: var(--color-text-black);
  }

  .btn-gray {
    @apply text-black;
    @apply hover:bg-gray-200;
    @apply focus:outline-none;
    @apply focus:ring-2;
    @apply focus:ring-gray-300;
    @apply font-medium;
    border-radius: var(--p-border-radius-full);
    padding: var(--w-space-s) var(--w-space-m);
    font-size: var(--w-font-size-tag);
    line-height: var(--w-line-height-normal);
    letter-spacing: var(--p-font-letter-spacing-tag);
    height: var(--w-space-xxl);
    border: 1px solid var(--color-background-brand-tag);
    background: var(--primary-white);
  }  

  .btn-save {
    @apply bg-action-site;
    @apply text-white;
    @apply hover:bg-action-hover;
    @apply focus:outline-none;
    @apply focus:ring-2;
    @apply focus:ring-purple-300;
    @apply font-medium;
    border-radius: var(--p-border-radius-full);
    padding: var(--w-space-s) var(--w-space-m);
    font-size: var(--w-font-size-tag);
    line-height: var(--w-line-height-normal);
    letter-spacing: var(--p-font-letter-spacing-tag);
    height: var(--w-space-xxl);
  }
  
  .btn-save:disabled {
    @apply cursor-not-allowed;
    @apply opacity-60;
    background: var(--action-site, #9ca3af);
    @apply hover:bg-gray-400;
  }

  .btn-main[disabled] {
    @apply hover:text-white;
    @apply bg-gray-400;
    @apply border-gray-400;
    @apply hover:bg-gray-400;
  }

  .btn-disabled {
    @apply text-gray-600;
    @apply hover:text-white;
    @apply bg-gray-400;
    @apply border-gray-400;
    @apply hover:bg-gray-400;
    @apply pointer-events-none;
    @apply opacity-50;
  }

  input {
    @apply block;
    @apply w-full;
    @apply border-0;
    @apply border-b;
    @apply border-blue-site;
    @apply focus:outline-none;
    @apply mb-4;
    /* de vazut de unde se extrage style pentru inputuri * layout.css */
    /* border: none!important;
    background: linear-gradient(270deg, #ffffff, #f1f1f1)!important;
    border-radius: var(--p-border-radius-0)!important; */
  }

  .placeholder-tag {
    height: calc(var(--w-space-xxl));
    background: white;
    margin: 4px;
    border-radius: var(--p-border-radius-tag);
    line-height: calc(var(--w-space-xxl));
    vertical-align: middle;
    position: relative;
    padding: 0px var(--w-space-s);
    display: inline-block;
    text-wrap: nowrap;
    max-width: 300px;
    overflow: hidden;
    text-overflow: ellipsis;
    font-size: var(--w-font-size-tag);
    line-height: var(--w-space-xxl);
    letter-spacing: var(--p-font-letter-spacing-tag);
  }

  h1,
  .title {
    font-size: var(--w-font-size-xxl);
    font-weight: var(--w-font-weight-book);
    color: var(--primary-color);
    line-height: var(--w-font-size-xxl);
    line-height: var(--w-line-height-heading);
  }

  h2 {
    @apply text-base;
    @apply sm:text-xl;
  }

  h3 {
    font-size: var(--w-font-size-tag);
    line-height: var(--w-line-height-heading);
  }
}

html,
body {
  padding: 0;
  margin: 0;
  text-rendering: geometricPrecision;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  font-feature-settings: normal;
  white-space-collapse: preserve;
  font-size: var(--w-font-size-body);
  font-family: 'Inter', system-ui, -apple-system, 'system-ui', 'Segoe UI',
    Roboto, 'Helvetica Neue', Arial, 'Noto Sans', sans-serif,
    'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji' !important;

    overflow-x: hidden;
    width: 100%;
}

a {
  color: inherit;
  text-decoration: none;
}

* {
  box-sizing: border-box;
}

/* Override default focus colors for tailwindcss-forms https://github.com/tailwindlabs/tailwindcss-forms */
[type='text']:focus,
[type='email']:focus,
[type='url']:focus,
[type='password']:focus,
[type='number']:focus,
[type='date']:focus,
[type='datetime-local']:focus,
[type='month']:focus,
[type='search']:focus,
[type='tel']:focus,
[type='checkbox']:focus,
[type='radio']:focus,
[type='time']:focus,
[type='week']:focus,
[multiple]:focus,
textarea:focus,
select:focus {
  --tw-ring-color: var(--primary-color);
  border-color: var(--primary-color);
  outline: 0 !important;
  /* border: 0px !important; */
  box-shadow: none;
}

/* tag  react-select */
.react-select__placeholder {
  z-index: 3 !important;
}
textarea {
  background: transparent;
  border: none;
}

.textTruncate {
  white-space: nowrap;
  text-overflow: ellipsis;
  overflow: hidden;

  @supports (-webkit-line-clamp: 2) {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: initial;
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
  }
}

.squircle {
  --squircle-smooth: 1;
  --squircle-radius: 26px;
}

/* de mutat in import */

.backgroundLabelAffiliation {
  background-color: var(--color-background-brand-tag);
  border-radius: var(--p-border-radius-200) 0 0 var(--p-border-radius-200);
  height: calc(var(--w-space-xxxl));
  line-height: calc(var(--w-space-xxxl));
  margin-right: calc(var(--w-space-s) * -1);
  font-size: var(--w-font-size-tag);
  cursor: default;
}

.InputRequired textarea {
  border-bottom: 2px solid var(--color-background-required) !important;
}
.errorInputText {
  position: absolute;
  bottom: -5px;
  right: 0;
}

/* de mutat in import FileUplaoder.tsx*/
.avatarUpload {
  position: absolute;
  transform: translate(0px, 0px);
  z-index: var(--w-z-index-modal);
  width: var(--c-avatar-size-150);
  height: var(--c-avatar-size-150);
  border-radius: var(--p-border-radius-full);
  text-align: center;
  vertical-align: middle;
  opacity: 0;
}
.avatarUpload:hover {
  cursor: pointer;
  background: var(--color-background-brand-tag);
  opacity: 0.77;
}

.avatarUpload svg {
  text-align: center;
  position: relative;
  display: block;
  transform: translate(-50%, -50%);
  top: 50%;
  left: 50%;
}

/* de mutat in import PersonHeader. done  tsx*/
/* .personNameTitle input {
  all: unset;
  font-size: var(--w-font-size-xxl);
  font-weight: var(--w-font-weight-book);
  padding: var(--w-space-none);
  line-height: var(--w-line-height-normal);
  height: var(--w-space-xxl);
} */
/* .personTaglineTitle input {
  all: unset;
  font-size: var(--w-font-size-tag);
  padding: var(--w-space-none);
  line-height: var(--w-line-height-normal);
  height: var(--w-space-xxl);
} */

.personDescriptionText * {
  font-size: var(--w-font-size-section-heading) !important;
  /* margin-bottom: var(--w-space-xxl); */
  line-height: var(--w-line-height-body);
}
.personDescriptionText ul {
  list-style: outside;
}
/* de mutat in import TagPicker  tsx*/
.tagPickerPill {
  position: relative;
  cursor: pointer;
  display: inline-flex !important;
  align-items: center;
  height: calc(var(--w-space-xxxl));
  margin-bottom: var(--w-space-s);
  margin-top: var(--w-space-s);
  color: var(--primary-black);
}

.tagPickerPill .react-select__multi-value__label {
  height: calc(var(--w-space-xl));
  height: 48px;
  background: white;
  border-radius: var(--p-border-radius-tag);
  line-height: calc(var(--w-space-xl));
  vertical-align: middle;
  position: relative;
  display: inline-block;
  text-wrap: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  font-size: var(--w-font-size-tag);
  line-height: var(--w-space-xxl);
  letter-spacing: var(--p-font-letter-spacing-tag);
}
.tagPickerPill .react-select__multi-value__remove {
  position: absolute;
  right: 0px;
  width: var(--w-space-l);
  height: var(--w-space-l);
  border-radius: var(--p-border-radius-full);
  opacity: 0;
}
.tagPickerPill:hover {
  cursor: grab;
}
.tagPickerPill:hover.tagPickerPill .react-select__multi-value__remove {
  background: var(--color-background-destructive-weaker);
  opacity: 1;
}
.react-select__multi-value__remove:hover {
  background-color: var(--color-background-destructive) !important;
}

.react-select__option--is-focused {
  background: var(--background-color);
  border-radius: var(--p-border-radius-200);
  height: fit-content;
  position: relative;
}

.react-select__option--is-focused:after {
  content: '';
  position: absolute;
  background-image: url('data:image/svg+xml;charset=UTF-8,%3Csvg%20version%3D%221.1%22%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%20xmlns%3Axlink%3D%22http%3A//www.w3.org/1999/xlink%22%20x%3D%220px%22%20y%3D%220px%22%20viewBox%3D%220%200%20256%20256%22%20enable-background%3D%22new%200%200%20256%20256%22%20xml%3Aspace%3D%22preserve%22%3E%3Cg%3E%3Cg%3E%3Cpath%20fill%3D%22%23fff%22%20d%3D%22M246%2C112.5c0%2C9.7-2.2%2C19-6.7%2C28.1c-4.5%2C9.1-10.6%2C17.2-18.3%2C24.3c-7.7%2C7.1-16.6%2C12.8-26.7%2C17.1c-10.1%2C4.3-20.8%2C6.4-32.1%2C6.4h-10.5c-4.1%2C0-8.5%2C0-13.3%2C0.1c-4.7%2C0.1-9.4%2C0.1-14.1%2C0.1h-12.6c-5.2%2C0-9.3%2C0.5-12.4%2C1.5c-3%2C1-4.5%2C3.1-4.3%2C6.4c0%2C2.5%2C0%2C5.3-0.1%2C8.5c-0.1%2C3.2-0.1%2C6.1-0.1%2C8.7c0%2C4.3-1.3%2C7-3.8%2C8.2c-2.5%2C1.2-5.8%2C0.4-9.9-2.6c-4.3-3-9.2-6.4-14.8-10.4s-11.3-8.1-17.2-12.4c-5.9-4.3-11.7-8.4-17.5-12.5c-5.7-4.1-10.8-7.8-15.3-11.1c-4.1-3-6.2-5.7-6.3-8.4c-0.1-2.6%2C1.7-5.4%2C5.5-8.4c3.9-2.9%2C8.5-6.4%2C13.8-10.5c5.3-4%2C10.8-8.1%2C16.5-12.4c5.7-4.3%2C11.4-8.4%2C16.9-12.5c5.6-4.1%2C10.5-7.8%2C14.8-11.1c4.6-3.6%2C8.5-5%2C11.7-4.2c3.1%2C0.8%2C4.7%2C3.4%2C4.7%2C7.9c0%2C1.3%2C0%2C2.9%2C0.1%2C4.8c0.1%2C1.9%2C0.2%2C3.9%2C0.3%2C6s0.2%2C4.2%2C0.3%2C6.1c0.1%2C2%2C0.1%2C3.7%2C0.1%2C5.2c0%2C3.1%2C1%2C5%2C3.1%2C5.8c2.1%2C0.7%2C4.9%2C1.1%2C8.5%2C1.1c8.1-0.2%2C17.1-0.2%2C27.1-0.2h27.9c4.1%2C0%2C8.2-0.9%2C12.4-2.6c4.1-1.7%2C7.9-4%2C11.3-6.9c3.4-2.9%2C6.2-6.2%2C8.3-9.9c2.1-3.8%2C3.2-7.8%2C3.2-12V93.5c0-6.5%2C0-12.9-0.1-19c-0.1-6.1-0.1-11.5-0.1-16.1v-8.6c0-3.6%2C1.2-6.6%2C3.6-9c2.4-2.4%2C5.5-4.2%2C9.1-5.4s7.7-1.9%2C11.9-1.9c4.3%2C0%2C8.3%2C0.6%2C11.9%2C1.7c3.7%2C1.2%2C6.7%2C2.8%2C9.1%2C5c2.4%2C2.2%2C3.6%2C5%2C3.6%2C8.2v6.6v11.6c0%2C4.3%2C0%2C8.8%2C0.1%2C13.6c0.1%2C4.8%2C0.1%2C9.5%2C0.1%2C13.9v11.3L246%2C112.5L246%2C112.5L246%2C112.5z%22/%3E%3C/g%3E%3C/g%3E%3C/svg%3E');
  background-size: 14px;
  background-repeat: no-repeat;
  background-position: center;
  width: 24px;
  height: 24px;
  right: 20px;
  top: 17px;
  opacity: 0.45;
  background-color: var(--color-background-offline);
  border-radius: var(--p-border-radius-150);
}
.react-select__option--is-focused:before {
  content: 'Select';
  position: absolute;
  width: 24px;
  height: 24px;
  right: 64px;
  top: 20px;
  color: var(--color-text-icon-offline);
}

.react-select__multi-value__remove svg {
  fill: var(--color-text-weakest);
  text-align: center;
  margin: 0 auto;
  transform: scale(1);
}
.react-select__dropdown-indicator {
  display: none !important;
}

/* single - value */
.tagPickerPillSingle {
  height: calc(var(--w-space-xxl));
  background: var(--primary-white);
  margin: 4px;
  border-radius: var(--p-border-radius-tag);
  line-height: calc(var(--w-space-xxl)) !important;
  vertical-align: middle;
  position: relative;
  padding: 0px var(--w-space-s);
  display: inline-block;
  text-wrap: nowrap !important;
  /* max-width: 300px !important; */
  overflow: hidden !important;
  text-overflow: ellipsis;
  font-size: var(--w-font-size-tag);
  line-height: var(--w-space-xxl);
  letter-spacing: var(--p-font-letter-spacing-tag);
}
.react-select__control .react-select__clear-indicator {
  position: absolute;
  right: -8px;
  width: var(--w-space-l);
  height: var(--w-space-l);
  border-radius: var(--p-border-radius-full);
  opacity: 0;
  cursor: pointer;
  z-index: var(--w-z-index-modal);
}
.react-select__control:hover {
  cursor: grab;
}
.react-select__control:hover.react-select__control
  .react-select__clear-indicator {
  background: var(--color-background-destructive-weaker);
  opacity: 1;
}
.react-select__control:hover.react-select__control
  .react-select__clear-indicator {
  background: var(--color-background-destructive-weaker);
  opacity: 1;
}
.react-select__clear-indicator:hover {
  background-color: var(--color-background-destructive) !important;
}
.react-select__clear-indicator svg {
  fill: var(--color-text-weakest);
  text-align: center;
  margin: 0 auto;
  transform: scale(1);
  width: 14px;
}

.react-select__value-container--has-value:not(
    .react-select__value-container--is-multi
  ) {
  position: relative;
  cursor: pointer;
  /* display: inline-flex; */
  align-items: center;
  /* background-color: var(--color-background-brand-tag); */
  /* border-radius: var(--p-border-radius-200); */
  /* height: calc(var(--w-space-xxxl)); */
  /* margin-right: calc(var(--w-space-s)); */
  /* padding: 0px var(--w-space-xs); */
}

.react-select__value-container--is-multi {
  margin-bottom: var(--w-space-s);
  margin-top: var(--w-space-s);
}

.react-select__value-container--is-multi.react-select__value-container--has-value {
  margin: 0px;
}

/* important in editor rdw */
/* Initially hide the toolbar */
.editor-container {
  display: table !important;
  width: 100%;
}
.editor-content {
  border: 1px solid #fff;
  padding: var(--w-space-s);
  margin-bottom: var(--w-space-l);
}
.editor-toolbar {
  visibility: hidden !important;
  transition: opacity 0.3s ease;
  width: 100%;
  padding: 6px 5px 0;
  border-radius: var(--p-border-radius-200) !important;
  border: 1px solid #e3e3e3;
  display: flex;
  justify-content: flex-start;
  background: #fdfdfd;
  flex-wrap: wrap;
  font-size: 15px;
  margin-bottom: 5px;
  -webkit-user-select: none;
  -moz-user-select: none;
  user-select: none;
  box-shadow: 0px 1px 13px 3px #0000000f;
}

/* Show toolbar when editor-wrapper is hovered */
.editor-container:hover .editor-toolbar {
  visibility: visible !important;
}
.editor-container:hover button {
  visibility: visible !important;
}

.editor-content.rdw-editor-main {
  border: 1px solid #00000038;
  border-radius: var(--p-border-radius-200);
}

/* Customize editor container and toolbar */
.editor-wrapper {
  position: relative;
  padding: 0;
  transition: border-color 0.3s ease;
}
.editor-wrapper:hover {
  border-color: #888; /* Optional: Change border color on hover */
}
.rdw-start-aligned-block * {
  font-size: var(--w-font-size-section-heading);
}
.rdw-option-wrapper {
  border-radius: var(--p-border-radius-150) !important;
}
.rdw-option-wrapper:hover {
  filter: invert(1) !important;
  box-shadow: none !important;
}

/* footer */

footer.footerLayout {
  background: #000;
}

/* TODO: Movo to header css, for some reasons it dose not register the css there */
.avatarUserHeader.active {
  border-radius: var(--p-border-radius-full);
  box-shadow: 0 0 0px 3px var(--color-border-weak);
  transition: box-shadow 0.13s ease-out;
}

/* TODO: Movo css, datepicker */
.css-1ll44ll-MuiOutlinedInput-notchedOutline {
  /* border-color: transparent!important; */
}

/* TODO: Movo all header component css in one file */
.textPostTitleEdit {
  font-size: var(--w-font-size-xxl);
  font-weight: var(--w-font-weight-book);
  transform: translateY(0.15em);
  line-height: var(--w-line-height-heading);
  background: var(--primary-white);
  box-shadow: inset 0px 0px 0px 4px var(--color-background-brand-tag);
  border-radius: var(--p-border-radius-tag);
  margin-bottom: 8px;
}

.InputRequired {
  border-bottom: 2px solid var(--color-background-required) !important;
}

.textPostSubtitle {
  font-size: var(--w-font-size-tag);
  font-style: italic;
  transform: translateY(0.55em);
  background: var(--primary-white);
  box-shadow: inset 0px 0px 0px 4px var(--color-background-brand-tag);
  border-radius: var(--p-border-radius-tag);
  margin-bottom: 8px;
}

.textPostTitleEdit:focus,
.textPostSubtitle:focus {
  background: var(--primary-white);
  box-shadow: inset 0px 0px 0px 4px var(--color-background-brand-tag);
  border-radius: var(--p-border-radius-tag);
}

.website {
  background: var(--primary-brand);
  border-radius: var(--p-border-radius-full);
}

.socialIcons svg {
  cursor: pointer;
}

/* description header component */
.personDescriptionText {
  margin-top: 20px;
}

/* TODO: Home demo */
#textList,
#tagsList {
  list-style: none;
  font-family: 'Inter';
  color: #000;
}
#textList li {
  list-style: none;
  padding: 0;
  margin: 0;
  position: absolute;
  text-align: right; /* Align text to the right */
  left: -100px; /* Adjust this width based on your design */
}
.tags_list {
  list-style: none;
  position: absolute;
  text-align: left;
  opacity: 1;
  width: auto;
  flex-basis: fit-content;
}

#next_x5F_small:hover path:first-child,
#prev_x5F_big:hover circle:first-child,
#next_x5F_big:hover path:first-child,
#prev_x5F_small:hover path:first-child {
  fill: #4267f4;
  cursor: pointer;
}

#next_x5F_small:hover .arrow,
#prev_x5F_big:hover .arrow,
#next_x5F_big:hover .arrow,
#prev_x5F_small:hover .arrow {
  fill: #fff;
}
.arrow {
  pointer-events: none;
}

@keyframes moveAndFadeIn {
  0% {
    transform: translate(-20px, 0);
    opacity: 0;
  }
  100% {
    transform: translate(0px, 0);
    opacity: 1;
  }
}

#tags_x5F_line {
  transform: translate(-20px, 0);
  opacity: 0;
  animation: moveAndFadeIn 2s ease-out forwards;
}

#tag_x5F_cat_x5F_line {
  transform: translate(-20px, 0);
  opacity: 0;
  animation: moveAndFadeIn 2s ease-out forwards;
  animation-delay: 1s;
}

/* Initial state of the elements: hidden */
#next_x5F_small,
#prev_x5F_big,
#next_x5F_big,
#prev_x5F_small,
.arrow,
text,
#pointer {
  opacity: 0; /* Start hidden */
  animation: fadeIn 1s ease-in-out forwards; /* Apply the fadeIn animation */
  animation-delay: 3s; /* Delay the start of the animation by 2 seconds */
}

/* Define the fadeIn keyframes */
@keyframes fadeIn {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}

.tag_category_list {
  opacity: 0;
  animation: fadeIn 1s ease-in-out forwards;
  animation-delay: 3s;
}

#tagsList {
  position: relative;
  opacity: 0;
  animation: fadeIn 1s ease-in-out forwards;
  animation-delay: 5s;
}

.tags_list i {
  border: 2px solid #eaeaea;
  border-radius: 4px;
  padding: 5px 10px;
  text-decoration: none;
  font-style: normal;
  background: #fff;
  width: 100%;
  position: relative;
  display: block;
  text-align: center;
}
.tags_list span {
  font-size: 14px;
  text-decoration: none;
  font-style: normal;
}
.tags_list span {
  font-size: 11px;
  text-decoration: none;
  font-style: normal;
  background: #fff;
  padding: 5px;
  top: -17px;
  right: -10px;
  position: absolute;
}
ul#tagsList li {
  position: relative;
}

h1.homeTitleh1 {
  font-size: 29px;
  color: var(--primary-white);
  font-weight: 300;
}
h2.homeTitleh2 {
  font-size: 3rem;
  text-align: left;
  font-weight: bold;
  margin-bottom: 1rem;
  line-height: 1;
  color: var(--primary-white);
}
.homeTitle {
  font-size: var(--w-font-size-xxxl);
  font-weight: var(--w-font-weight-book);
  line-height: var(--w-line-height-normal);
  background: linear-gradient(to left, #2c2c2e, #6c77a9);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
}
.homeSubtitle {
  margin-top: 20px;
  font-size: var(--w-font-size-tag);
  font-weight: var(--w-font-weight-body);
  line-height: var(--w-line-height-normal);
  color: var(--primary-white);
  margin-bottom: 1rem;
}

.homeHero {
  justify-content: space-between;
  align-items: center;
  max-width: var(--p-breakpoints-2xl);
}

.homeFeatured {
  max-width: 850px;
  margin: 0 auto;
  margin-top: 5vw;
}
.postTagsOrganisation .tagListContainer {
  margin-top: 0px!important;
}

svg.homeRoata {
  flex-basis: 50%;
  display: flex;
  justify-content: space-evenly;
  align-items: center;
  position: relative;
  right: 0;
  transform: translateX(30%);
}

.homeTitleContainer {
  flex-basis: 60%;
  transform: translateY(10rem);
}

.tagListTitle {
  font-weight: var(--w-font-weight-book);
  border-bottom: var(--p-border-width-025) solid
    var(--color-border-brand-separator);
  padding-bottom: var(--w-space-m);
  margin-top: 2em;
  width: 100%;
}

/* homepage */
.sliderWrap:before {
    display: block;
    content: ' ';
    position: absolute;
    top: 0;
    width: 150px;
    height: 100%;
    background: linear-gradient(90deg, #ffffff 18.67%, rgba(243, 247, 247, 0));
    z-index: 5;
    pointer-events: none;
  }
  
.sliderWrap:after {
  display: block;
  content: ' ';
  position: absolute;
  top: 0;
  width: 150px;
  height: 100%;
  background: linear-gradient(270deg, #ffffff 18.67%, rgba(243, 247, 247, 0));
  z-index: 5;
  right: -10px;
  pointer-events: none;
  }

.index_customerGroups {
  width: 100%;
  display: flex;
  flex-direction: column;
  position: relative;
  overflow: hidden;
}

.index_customerGroups:before {
  left: -2px;
  -webkit-transform: matrix(-1, 0, 0, 1, 0, 0);
  transform: matrix(-1, 0, 0, 1, 0, 0);
}

.index_customerGroups:before {
  display: block;
  content: ' ';
  position: absolute;
  top: 0;
  width: 150px;
  height: 100%;
  /* background: linear-gradient(270deg, #ffffff 18.67%, rgba(243, 247, 247, 0)); */
  z-index: 5;
  pointer-events: none;
}

.index_customerGroups:after {
  display: block;
  content: ' ';
  position: absolute;
  top: 0;
  width: 150px;
  height: 100%;
  /* background: linear-gradient(270deg, #ffffff 18.67%, rgba(243, 247, 247, 0)); */
  z-index: 5;
  right: -10px;
  pointer-events: none;
}

.index_customerGroup {
  display: flex;
  flex-direction: row;
  flex-shrink: 0;
}
.index_customerItem__rvamt:before {
  content: " ";
  position: absolute;
  right: 0;
  top: 0;
  height: 100%;
  /* background: linear-gradient(269deg, #ffffff -15%, rgb(243 247 247 / 0%)); */
  z-index: 5;
  pointer-events: none;
  width: 20%;
}
.index_customerItem__rvamt::after {
  content: " ";
  position: absolute;
  left: 0;
  top: 0;
  height: 100%;
  /* background: linear-gradient(90deg, #ffffff -15%, rgb(243 247 247 / 0%)); */
  z-index: 5;
  pointer-events: none;
  width: 20%;
}
.index_customerItem {
  margin: 8px 16px;
}

.index_customerItemIcon__x2ywq {
  width: 148px;
  height: 32px;
  object-fit: contain;
}

.index_customerGroupWrapper.index_reverse {
  -webkit-animation: index_partner-scroll-reverse 25s linear 0s infinite;
  animation: index_partner-scroll-reverse 25s linear 0s infinite;
}

.index_customerGroupWrapper {
  display: flex;
  flex-direction: row;
  -webkit-animation: index_partner-scroll 25s linear 0s infinite;
  animation: index_partner-scroll 25s linear 0s infinite;
}

@keyframes index_partner-scroll-reverse {
  0% {
    -webkit-transform: translateX(-100%) translateZ(0);
    transform: translateX(-100%) translateZ(0);
  }

  100% {
    -webkit-transform: translateX(0) translateZ(0);
    transform: translateX(0) translateZ(0);
  }
}
@keyframes index_partner-scroll {
  0% {
    -webkit-transform: translateX(0) translateZ(0);
    transform: translateX(0) translateZ(0);
  }
  100% {
    -webkit-transform: translateX(-100%) translateZ(0);
    transform: translateX(-100%) translateZ(0);
  }
}

.index_customers {
  display: flex;
  flex-direction: column;
  align-items: center;
  padding: 2rem;
  background: var(--primary-white);
}
.Container_wrapper {
  /* margin: 0 auto; */
  min-width: 650px;
  box-sizing: border-box;


  border-radius: 100%;
  height: 44rem;
  margin-top: 5rem;
  padding-top: 5rem;
  overflow: hidden;
  position: relative;
  width: 650px;
}

.Container_wrapper::before{
  content: "";
  background: #fff;
  position: absolute;
  width: 100%;
  height: 44rem;
  top: -7rem;
}

@media only screen and (min-width: 601px) {
  :root {
    --container-width: 640px;
  }
}

@media only screen and (max-width: 768px) {
  .homeHero {
    flex-direction: column;
  }
  .homeTitleContainer {
    transform: translateY(0rem);
    flex-wrap: nowrap;
    min-width: 100%;
  }  
  .homeTitle {
    font-size: var(--w-font-size-xl);
  }
  .homeSubtitle {
    width: 100%;
  }
  .Container_wrapper {
    transform: translateX(-50%);
    left: 50%;
    z-index: 0;
  }
  .index_customers {
    background: transparent;
  }
  .Container_wrapper {
    overflow-x: hidden;
    width: 100vw;
  }
}
